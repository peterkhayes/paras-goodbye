{"version":3,"sources":["messages.ts","components/space.png","components/Container.tsx","components/paras.svg","components/pizza-slice.png","components/PizzaImage.tsx","components/some_say_no_lopass.mp3","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["MESSAGES","Cara","Caroline","Charlene","Charlie","Dan","Dmitriy","Drew","Isaac","Kate","Kelsey","Loren","Peter","Priya","Tiffany","Tom","Container","children","className","style","backgroundImage","spaceImg","PizzaImage","text","author","x","y","r","distance","isHovered","onMouseEnter","onMouseLeave","top","left","width","height","zIndex","Math","floor","alt","src","pizzaImg","transform","MIN_COORD","MAX_COORD","ANGLE_RANDOMZIER","SLOWDOWN_FACTOR","INITIAL_PIZZAS","createPizza","BG_MUSIC","Audio","musicFile","App","useState","started","setStarted","pizzas","setPizzas","hoveredPizzaRef","useRef","useEffect","play","pause","interval","setInterval","existingPizzas","length","newPizza","concat","clearInterval","map","pizza","current","dx","dy","dr","movePizza","filter","isInBounds","onMouseEnterPizza","useCallback","onMouseLeavePizza","parasImg","i","onClick","randFloat","min","max","random","randInt","sample","arr","getStartPoint","Object","keys","every","p","slope","baseAngle","atan","PI","adjustedAngle","cos","sin","loop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","catch","err","console","error","ReactDOM","render","StrictMode","document","getElementById","log"],"mappings":"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","file":"static/js/main.ce40e96e.chunk.js","sourcesContent":["const MESSAGES: Record<string, string> = {\n  Cara: \"Your light will be missed!!\",\n  Caroline:\n    \"Paras - thank you for everything you brought to Remix as a leader and an engineer. Wishing you all the best for your next chapter!\",\n  Charlene:\n    \"Super not stoked you're leaving, but I get it. Remix was lucky to have your eng leadership. I'm thankful to have worked with you‚Äìthough we only worked together fairly minimally, I've always appreciated your authenticity, honesty, and probably one or two of your band shirts.\",\n  Charlie:\n    \"Your drive to make the world as you want it to be is infectious. I know you'll bring that to wherever you end up next, but I'll miss it here. Glad we had the chance to work together!\",\n  Dan:\n    \"Paras - I'll eat an eggplant parm in your honor. Seriously though, I've learned so much from working with you, and will always treasure that. \",\n  Dmitriy:\n    \"we've had a good run. thanks for caring about the right stuff and always elevating voices in your team. please continue sending me neat music though thx\",\n  Drew:\n    \"Wishing you all the best on your next adventure. May the zahhhh parties continue where ever you go!! üçïüçï\",\n  Isaac:\n    \"It's been such a pleasure working with and learning from you. You bring such a contagiously positive energy to everything you do. See ya around!\",\n  Kate:\n    \"Paras, thank you so much for being an important, irreplaceable, genuine part of culture at Remix.\",\n  Kelsey:\n    \"We will miss you, Paras! Hope to cross paths again in the future. :) \",\n  Loren:\n    \"Paras! I've felt your impact here in three ways: 1. great music recommendations, 2. the kind closeness of the transit team, 3. the joy I got from hanging out in person and over zoom. You'll be missed, good luck on the new adventure\",\n  Peter:\n    \"It has been an absolute time working with you these last couple of years. I've loved having someone I truly respect and trust as a peer as we both transitioned into managers. Couldn't have done it without you. Wishing you all the best.\",\n  Priya:\n    \"Paras, thank you for helping make Remix a place where folks can learn, grow, and be themselves. You've contributed greatly to the sense of community and belonging at Remix, and you will be missed!\",\n  \"Stuart C\":\n    \"Paras, you've had a huge impact on the team. It's been a true pleasure working with you and I sincerely hope we can do it again someday. I'll miss you and I'll see you around (KGATLW in October?!?)\",\n  Tiffany:\n    \"Paras - thank you for everything you've brought to Remix! We will miss you.\",\n  Tom:\n    \"Paras, you're one fine pizza work, and it's going to be hard to top you.  Seriously, though, thanks for bringing your humanity and values to the workplace and for building our mentorship culture.  You've really made your mark!  Can't wait to see what positive impact you have on the world in future endeavors!\",\n};\n\nexport default MESSAGES;\n","export default __webpack_public_path__ + \"static/media/space.95ff8ed3.png\";","import spaceImg from './space.png';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport default function Container({ children }: Props) {\n  return (\n    <div\n      className=\"absolute inset-0 flex items-center justify-center overflow-hidden bg-black bg-repeat bg-animation\"\n      style={{ backgroundImage: `url(${spaceImg})` }}\n    >\n      {children}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/paras.4a9a5b87.svg\";","export default __webpack_public_path__ + \"static/media/pizza-slice.964c723b.png\";","import pizzaImg from './pizza-slice.png';\n\ninterface Props {\n  text: string;\n  author: string;\n  x: number;\n  y: number;\n  r: number;\n  distance: number;\n  isHovered: boolean;\n  onMouseEnter: (author: string) => void;\n  onMouseLeave: () => void;\n}\n\nexport default function PizzaImage({\n  text,\n  author,\n  x,\n  y,\n  r,\n  distance,\n  isHovered,\n  onMouseEnter,\n  onMouseLeave,\n}: Props) {\n  return (\n    <div\n      className=\"absolute flex items-center justify-center -translate-x-1/2 -translate-y-1/2\"\n      style={{\n        top: `${100 * y}%`,\n        left: `${100 * x}%`,\n        width: 90000 / distance,\n        height: 60000 / distance,\n        zIndex: Math.floor(100000 - (isHovered ? 0 : distance)),\n      }}\n    >\n      <img\n        alt=\"pizza\"\n        className=\"absolute\"\n        src={pizzaImg}\n        style={{ transform: `rotate(${r}deg)` }}\n      />\n      <div\n        className={`z-10 w-56 p-2 text-xs bg-white rounded cursor-default ${\n          isHovered ? \"\" : \"bg-opacity-80 opacity-80\"\n        }`}\n        onMouseEnter={() => onMouseEnter(author)}\n        onMouseLeave={onMouseLeave}\n      >\n        {text} - <strong>{author}</strong>\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/some_say_no_lopass.6bcd55af.mp3\";","import { useCallback, useEffect, useRef, useState } from 'react';\n\nimport MESSAGES from '../messages';\nimport Container from './Container';\nimport parasImg from './paras.svg';\nimport PizzaImage from './PizzaImage';\n// @ts-ignore\nimport musicFile from './some_say_no_lopass.mp3';\n\ninterface FlyingPizza {\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  r: number;\n  dr: number;\n  distance: number;\n  text: string;\n  author: string;\n}\n\n// Pizzas start this far off the screen, so that they can gradually slide into view.\nconst MIN_COORD = -0.5;\nconst MAX_COORD = 1.5;\n\n// Pizzas vary in distance from the camera, affecting size and speed.\nconst MIN_DISTANCE = 100;\nconst MAX_DISTANCE = 600;\n\n// Pizzas by default aim for the center but can diverge by this many radians.\nconst ANGLE_RANDOMZIER = 0.4;\n\n// Animation speed, 60fps baybee\nconst FRAME_RATE = 60;\nconst FRAME_DELAY = 1000 / FRAME_RATE;\n\n// Arbitrary number to keep the pizza speed reasonable.\nconst SLOWDOWN_FACTOR = 200000;\n\n// Max number of pizzas on screen\nconst SIMULTANEOUS_PIZZAS = 10;\n\n// Pizzas are created this often if there are fewer than the max\nconst GENERATION_SPEED = 1500;\n\n// Start with one pizza\nconst INITIAL_PIZZAS = [createPizza()!];\n\nconst BG_MUSIC = new Audio(musicFile);\nBG_MUSIC.loop = true;\n\nexport default function App() {\n  const [started, setStarted] = useState(false);\n  const [pizzas, setPizzas] = useState(INITIAL_PIZZAS);\n  const hoveredPizzaRef = useRef<string | null>(null);\n\n  // Play music once user clicks\n  useEffect(() => {\n    if (!started) return;\n\n    BG_MUSIC.play();\n    return () => BG_MUSIC.pause();\n  }, [started]);\n\n  // Generate a new pizza on an interval if there are fewer than the max\n  useEffect(() => {\n    if (!started) return;\n\n    const interval = setInterval(\n      () =>\n        setPizzas((existingPizzas) => {\n          if (existingPizzas.length >= SIMULTANEOUS_PIZZAS)\n            return existingPizzas;\n\n          const newPizza = createPizza(existingPizzas);\n          if (newPizza) {\n            return existingPizzas.concat(newPizza);\n          } else {\n            return existingPizzas;\n          }\n        }),\n      GENERATION_SPEED\n    );\n\n    return () => clearInterval(interval);\n  }, [started]);\n\n  // Move pizzas every frame, except for the hovered one\n  useEffect(() => {\n    if (!started) return;\n    const interval = setInterval(\n      () =>\n        setPizzas((existingPizzas) =>\n          existingPizzas\n            .map((pizza) =>\n              pizza.author === hoveredPizzaRef.current\n                ? pizza\n                : movePizza(pizza)\n            )\n            .filter(isInBounds)\n        ),\n      FRAME_DELAY\n    );\n\n    return () => clearInterval(interval);\n  }, [started]);\n\n  const onMouseEnterPizza = useCallback((author: string) => {\n    hoveredPizzaRef.current = hoveredPizzaRef.current || author;\n  }, []);\n  const onMouseLeavePizza = useCallback(() => {\n    hoveredPizzaRef.current = null;\n  }, []);\n\n  return (\n    <Container>\n      {started ? (\n        <>\n          <img\n            src={parasImg}\n            alt=\"Goodbye Paras\"\n            style={{ width: \"70%\" }}\n            className=\"opacity-20\"\n          />\n          {pizzas.map(({ text, author, x, y, r, distance }, i) => (\n            <PizzaImage\n              key={i}\n              text={text}\n              author={author}\n              x={x}\n              y={y}\n              r={r}\n              distance={distance}\n              isHovered={hoveredPizzaRef.current === author}\n              onMouseEnter={onMouseEnterPizza}\n              onMouseLeave={onMouseLeavePizza}\n            />\n          ))}\n        </>\n      ) : (\n        <button\n          className=\"p-4 bg-white rounded\"\n          onClick={() => setStarted(true)}\n        >\n          Start\n        </button>\n      )}\n    </Container>\n  );\n}\n\nfunction randFloat(min: number, max: number) {\n  return min + Math.random() * (max - min);\n}\n\nfunction randInt(min: number, max: number) {\n  return Math.floor(randFloat(min, max));\n}\n\nfunction sample<X>(arr: Array<X>): X {\n  return arr[randInt(0, arr.length)];\n}\n\nfunction getStartPoint(): { x: number; y: number } {\n  const side = randInt(0, 4);\n  switch (side) {\n    case 0:\n      // top\n      return { x: Math.random(), y: MIN_COORD };\n    case 1:\n      // bottom\n      return { x: Math.random(), y: MAX_COORD };\n    case 2:\n      // left\n      return { x: MIN_COORD, y: Math.random() };\n    default:\n      // right\n      return { x: MAX_COORD, y: Math.random() };\n  }\n}\n\nfunction isInBounds({ x, y }: { x: number; y: number }) {\n  return x >= MIN_COORD && x <= MAX_COORD && y >= MIN_COORD && y <= MAX_COORD;\n}\n\nfunction createPizza(\n  existingPizzas: Array<FlyingPizza> = []\n): FlyingPizza | null {\n  const author = sample(\n    Object.keys(MESSAGES).filter((author) =>\n      existingPizzas.every((p) => p.author !== author)\n    )\n  );\n  if (author == null) return null;\n\n  const { x, y } = getStartPoint();\n  const slope = (y - 0.5) / (x - 0.5);\n  const baseAngle = Math.atan(slope) + (x < 0.5 ? Math.PI : 0);\n  const adjustedAngle =\n    baseAngle + randFloat(-1 * ANGLE_RANDOMZIER, ANGLE_RANDOMZIER);\n\n  const distance = randInt(MIN_DISTANCE, MAX_DISTANCE);\n  const dx = (-1 * Math.cos(adjustedAngle) * distance) / SLOWDOWN_FACTOR;\n  const dy = (-1 * Math.sin(adjustedAngle) * distance) / SLOWDOWN_FACTOR;\n\n  const r = randInt(0, 360);\n  const dr = randFloat(0.05, 0.2);\n\n  const text = MESSAGES[author];\n\n  return { x, y, distance, dx, dy, r, dr, author, text };\n}\n\nfunction movePizza(pizza: FlyingPizza): FlyingPizza {\n  // Using mutable data here to make things faster\n  pizza.x = pizza.x + pizza.dx;\n  pizza.y = pizza.y + pizza.dy;\n  pizza.r = pizza.r + pizza.dr;\n  return pizza;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    }).catch((err) => {\n      console.error(\"Error reporting web vitals\", err);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}